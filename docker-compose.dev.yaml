services:
  broker:
    image: rabbitmq:management
    environment:
      RABBITMQ_NODE_PORT: 5672
      RABBITMQ_USE_LONGNAME: false
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 1s
      timeout: 3s
      retries: 30

  migrations:
    build:
      dockerfile: ./migrations.Dockerfile
    environment:
      WALLET_DB_URL: "sqlite:////code/wallet.db"
      ANALYTIC_DB_URL: "sqlite:////code/analytic.db"
    volumes:
      - ./wallet.db:/code/wallet.db
      - ./analytic.db:/code/analytic.db
      - ./data/:/code/data

  wallet:
    build:
      dockerfile: ./wallet-api.Dockerfile
    environment:
      DB_URL: "sqlite:////code/wallet.db"
      NOTIFICATION_QUEUE: "notification.router.queue"
      BROKER_URL: "amqp://guest:guest@broker:5672/?heartbeat=60"
    command: ["--port", "80"]
    volumes:
      - ./wallet.db:/code/wallet.db
    depends_on:
      migrations:
        condition: service_completed_successfully
      broker:
        condition: service_healthy

  router:
    build:
      dockerfile: ./event-engine.Dockerfile
      target: router
    environment:
      BROKER_URL: "amqp://guest:guest@broker:5672/?heartbeat=60"
      NOTIFICATION_QUEUE: "notification.router.queue"
      YOC_QUEUE: "processor.yoc.queue"
    depends_on:
      broker:
        condition: service_healthy

  yoc:
    build:
      dockerfile: ./event-engine.Dockerfile
      target: yoc-processor
    environment:
      BROKER_URL: "amqp://guest:guest@broker:5672/?heartbeat=60"
      YOC_QUEUE: "processor.yoc.queue"
      WALLET_DB_URL: "sqlite:////code/wallet.db"
      ANALYTIC_DB_URL: "sqlite:////code/analytic.db"
    volumes:
      - ./wallet.db:/code/wallet.db
      - ./analytic.db:/code/analytic.db
    depends_on:
      broker:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

